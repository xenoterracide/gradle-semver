# SPDX-FileCopyrightText: Copyright Â© 2024 Caleb Cushing
#
# SPDX-License-Identifier: CC0-1.0

name: update-java
on:
  schedule:
    - cron: "0 3 * * 0"
  push:
    branches:
      - ci/auto-update-java
jobs:
  update-java:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
      packages: read
    env:
      ORG_GRADLE_PROJECT_ghUsername: ${{ secrets.GITHUB_ACTOR }}
      ORG_GRADLE_PROJECT_ghPassword: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
      - uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: current
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}
      - run: gradle wrapper --write-locks
      - run: make ci-update-java
      - run: echo "stdout=$(git status --porcelain=1)" >> $GITHUB_OUTPUT
        name: git status
        id: git_status
      - uses: actions/setup-python@v5
        if: ${{ contains(steps.git_status.outputs.stdout, 'gradle-wrapper.jar') }}
      - run: pip install reuse
        if: ${{ contains(steps.git_status.outputs.stdout, 'gradle-wrapper.jar') }}
      - run: reuse annotate --license 'Apache-2.0' --copyright 'Gradle, Inc' --copyright-prefix spdx-string-symbol --merge-copyrights --skip-unrecognised gradle/wrapper/gradle-wrapper.jar
        if: ${{ contains(steps.git_status.outputs.stdout, 'gradle-wrapper.jar') }}
      - uses: peter-evans/create-pull-request@v7
        id: create_pr
        with:
          title: "chore(deps): java"
          branch: topic/update-java
          token: ${{ secrets.GH_MERGE_PAT }}
      - run: gh pr merge --auto --squash ${{ steps.create_pr.outputs.pull-request-number }}
        if: ${{ steps.create_pr.outputs.pull-request-number != '' }}
        env:
          GH_TOKEN: ${{ secrets.GH_MERGE_PAT }}
